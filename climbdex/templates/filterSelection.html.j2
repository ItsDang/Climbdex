<!DOCTYPE html>
<html>

<head>
  {% include 'head.html.j2'%}
  <style>
    .input-group-text {
      width: 150px;
    }

    #grade-slider {
      padding: 0 32px;
    }
  </style>

</head>

<link href="{{url_for('static', filename='css/nouislider.css')}}" rel="stylesheet">
<script src="{{url_for('static', filename='js/nouislider.min.js')}}"></script>

<body>
  <div class="container-sm text-center">
    {% include 'heading.html.j2' %}
    <div class="row justify-content-md-center">
      <div class="col-md-5">
        <form class="card p-3 bg-light" id="form-search" action="/results">
          <p class="mb-2">Setup: {{board_name.capitalize()}} - {{layout_name}} - {{size_name}}</p>
          <p class="mb-5"><small><a id="anchor-back">Back to setup selection</a></small></p>
          <div class="mb-2 gap-2" id="grade-slider"></div>
          <input type="hidden" id="slider-minValue" name="minGrade">
          <input type="hidden" id="slider-maxValue" name="maxGrade">
          <div class="input-group mb-3">
            <span class="input-group-text">Name</span>
            <input type="text" class="form-control" id="name" name="name">
          </div>
          <div class="input-group mb-3">
            <span class="input-group-text">Angle</span>
            <select class="form-select" id="select-angle" name="angle">
              <option value="any" selected>Any</option>
              {% for angle in angles %}
              <option value="{{angle[0]}}">{{angle[0]}}</option>
              {% endfor %}
            </select>
          </div>
          <div class="input-group mb-3">
            <span class="input-group-text">Min Ascents</span>
            <input type="number" class="form-control" id="input-min-ascents" value="1" min="1" name="minAscents" />
          </div>
          <div class="input-group mb-3">
            <span class="input-group-text">Sort By</span>
            <select class="form-select" id="select-sort-by" name="sortBy">
              <option value="ascents" selected>Ascents</option>
              <option value="difficulty">Difficulty</option>
              <option value="name">Name</option>
              <option value="quality">Quality</option>
            </select>
            <select class="form-select" id="select-sort-order" name="sortOrder">
              <option value="desc" selected>Descending</option>
              <option value="asc">Ascending</option>
            </select>
          </div>

          <div class="mb-3 d-grid gap-2">
            <button class="btn btn-outline-secondary collapsed" type="button" data-bs-toggle="collapse"
              data-bs-target="#advanced-filters" aria-expanded="false" aria-controls="advanced-filters">Advanced
              Filters</button>
          </div>
          <div class="row">
            <div class="col">
              <div class="collapse multi-collapse" id="advanced-filters">
                <div class="input-group mb-3">
                  <span class="input-group-text">Min Rating</span>
                  <input type="number" , class="form-control" id="input-min-rating" value="1.0" min="1.0" max="3.0"
                    step="0.1" name="minRating" />
                </div>
                <div class="input-group mb-3">
                  <span class="input-group-text">Classics only</span>
                  <select class="form-select" id="only-classics" name="onlyClassics">
                    <option value="0" selected>No</option>
                    <option value="1">Yes</option>
                  </select>
                </div>
                <div class="input-group mb-3">
                  <span class="input-group-text">Grade Accuracy</span>
                  <select class="form-select" id="select-grade-accuracy" name="gradeAccuracy">
                    <option value="1" selected>Any</option>
                    <option value="0.2">Somewhat Accurate (&lt;0.2)</option>
                    <option value="0.1">Very Accurate (&lt;0.1)</option>
                    <option value="0.05">Extremely Accurate (&lt;0.05)</option>
                  </select>
                </div>
                <div class="input-group mb-3">
                  <span class="input-group-text">Setter Name</span>
                  <input type="text" class="form-control" id="settername" name="settername" />
                </div>
              </div>
            </div>
          </div>

          <div class="mb-3 d-grid gap-2">
            <button class="btn btn-secondary" id="hold-filter-button" data-bs-toggle="collapse"
              data-bs-target="#div-hold-filter" data-count="0" type="button">
              0 Selected Holds
            </button>
            <input type="hidden" id="input-hold-filter" name="holds" />
            <input type="hidden" id="input-mirrored-hold-filter" name="mirroredHolds" />
            {% for param_name, param_value in params.items(multi=True)%}
            <input type="hidden" name="{{param_name}}" value="{{param_value}}" />
            {% endfor %}
            <div class="collapse" id="div-hold-filter">
              <svg class="vh-100 mw-100" id="svg-hold-filter" viewbox="0 0 0 0"
                xmlns="http://www.w3.org/2000/svg"></svg>
              <div class="input-group mb-3">
                <span class="input-group-text">Color Match</span>
                <select class="form-select" id="select-match-role" name="roleMatch">
                  <option value="strict" selected>Strict</option>
                  <option value="any">Any</option>
                </select>
              </div>
              <div class="input-group mb-3 d-grid gap-2">
                <button class="btn btn-warning" type="button" id="button-reset-hold-filter">Reset Hold
                  Filter</button>
              </div>
            </div>
          </div>
          <div class="input-group mb-3 d-grid gap-2">
            <button class="btn btn-primary" type="submit">Search</button>
          </div>
        </form>
      </div>
    </div>
    <div class="row justify-content-md-center mt-3">
      {% include 'footer.html.j2' %}
    </div>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
    crossorigin="anonymous"></script>
  <script src="{{url_for('static', filename='js/common.js')}}"></script>
  <script src="{{url_for('static', filename='js/filterSelection.js')}}"></script>
  <script>
    const onClick = function (event) {
      onFilterCircleClick(event.target, {{ colors | tojson}})
    };
    drawBoard('svg-hold-filter', {{ images_to_holds | tojson}}, {{ edge_left }}, {{ edge_right }}, {{ edge_bottom }}, {{ edge_top }}, onClick);
  </script>

  <script>
    var gradeMapping = {
      {% for grade in grades %}
    "{{grade[1]}}": "{{grade[0]}}",
      {% endfor %}
    };

    var arbitraryValuesSlider = document.getElementById('grade-slider');
    var arbitraryValuesForSlider = [
      {% for grade in grades %}
    "{{grade[1]}}",
      {% endfor %}
    ];

    var format = {
      to: function (value) {
        return arbitraryValuesForSlider[Math.round(value)];
      },
      from: function (value) {
        return arbitraryValuesForSlider.indexOf(value);
      }
    };

    var slider = noUiSlider.create(arbitraryValuesSlider, {
      // start values are parsed by 'format'
      start: [arbitraryValuesForSlider[0], arbitraryValuesForSlider[arbitraryValuesForSlider.length - 1]],
      range: { min: 0, max: arbitraryValuesForSlider.length - 1 },
      step: 1,
      connect: true,
      tooltips: true,
      format: format,
    });

    mergeTooltips(arbitraryValuesSlider, 10, ' - ');

    //update hidden values with slider values
    slider.on('update', function (values, handle) {
      document.getElementById('slider-minValue').value = values[0];
      document.getElementById('slider-maxValue').value = values[1];
    });

    //convert slider values to numeric difficulty before form submit
    document.getElementById('form-search').addEventListener('submit', function (e) {
      e.preventDefault();
      var minGradeValue = document.getElementById('slider-minValue').value;
      var maxGradeValue = document.getElementById('slider-maxValue').value;
      var converted_minGrade = gradeMapping[minGradeValue];
      var converted_maxGrade = gradeMapping[maxGradeValue];
      document.getElementById('slider-minValue').value = converted_minGrade;
      document.getElementById('slider-maxValue').value = converted_maxGrade;
      this.submit();
    });
  </script>

</body>

</html>